require('dotenv').config();
const { Bot, GrammyError, HttpError, Keyboard, InlineKeyboard } = require('grammy');
const fs = require('fs');

const bot = new Bot(process.env.BOT_API_KEY);

// –§–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
const userDataFile = 'userData.json';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ userData.json –∏ —Å–æ–∑–¥–∞–µ–º –µ–≥–æ, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (!fs.existsSync(userDataFile)) {
  fs.writeFileSync(userDataFile, '{}');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function updateUserData(userId) {
  let userData = JSON.parse(fs.readFileSync(userDataFile));
  if (!userData[userId]) {
    userData[userId] = {
      timesStarted: 0,
    };
  }
  userData[userId].timesStarted++;
  fs.writeFileSync(userDataFile, JSON.stringify(userData, null, 2));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
function isAdmin(userId) {
  return userId.toString() === process.env.ADMIN_ID;
}

let userData = JSON.parse(fs.readFileSync(userDataFile));

bot.command('start', async (ctx) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—Å–∫–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç –≤–ø–µ—Ä–≤—ã–µ
  if (!userData[ctx.from.id]) {
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç –≤–ø–µ—Ä–≤—ã–µ, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    updateUserData(ctx.from.id);
  }
  const startKeyboard = new Keyboard()
    .text('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏')
    .row()
    .text('–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏')
    .row()
    .text('–ü—Ä–µ–¥–ª–æ–∂–∫–∞')
    .row()
  await ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–º–æ—à–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞ –¢–µ—Ö–Ω–æ–º–∞–Ω—å—è–∫!',
  );
  await ctx.reply('–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º? –í—ã–±–∏—Ä–∞–π üëá', {
    reply_markup: startKeyboard,
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
bot.command('admin', async (ctx) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
  if (isAdmin(ctx.from.id)) {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
    let userData = JSON.parse(fs.readFileSync(userDataFile));
    let totalStarts = 0;
    for (const userId in userData) {
      totalStarts += userData[userId].timesStarted;
    }
    await ctx.reply(`–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞:\n–í—Å–µ–≥–æ –∑–∞–ø—É—Å–∫–æ–≤: ${totalStarts}`);
  } else {
    await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!');
  }
});

// –ú–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
const socialNetworks = [
  { name: 'YouTube', url: 'https://www.youtube.com/@tehno.maniak' },
  { name: 'Telegram', url: 'https://t.me/tehnomaniak07' },
  { name: 'Vk', url: 'https://vk.com/public212223166' },
  { name: '–î–ó–ï–ù', url: 'https://dzen.ru/filimonov-blog.ru' },
  { name: 'TikTok', url: 'https://www.tiktok.com/' },
  { name: 'X', url: 'https://example.com/x' },
  { name: 'Instagram', url: 'https://www.instagram.com/' }
];

// –ú–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –∏ —Å–∫–∏–¥–æ–∫
const promoCodes = [
  { name: '–•–æ—Å—Ç–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞', url: 'https://timeweb.cloud/?i=108133' },
  { name: '–Ø–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º', url: 'https://example.com/yandex' },
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
function createKeyboard(buttons) {
  const keyboard = new Keyboard();
  const buttonCount = buttons.length;
  
  // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–π –∫–æ–ª–æ–Ω–∫–µ
  const buttonsPerColumn = Math.ceil(buttonCount / 2);
  
  for (let i = 0; i < buttonsPerColumn; i++) {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –ø–µ—Ä–≤—É—é –∫–æ–ª–æ–Ω–∫—É
    const index1 = i;
    keyboard.text(buttons[index1].name);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–∏
    const index2 = i + buttonsPerColumn;
    if (index2 < buttonCount) {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ç–æ—Ä—É—é –∫–æ–ª–æ–Ω–∫—É
      keyboard.text(buttons[index2].name);
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
    keyboard.row();
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
  keyboard.text('–ù–∞–∑–∞–¥');
  
  return keyboard;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
function handleButtonClicks(ctx, items) {
  items.forEach(item => {
    bot.hears(item.name, async (ctx) => {
      const message = `–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ ${item.name}: ${item.url}`;
      await ctx.reply(message);
    });
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"
bot.hears('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', async (ctx) => {
  const socialKeyboard = createKeyboard(socialNetworks);
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å:', {
    reply_markup: socialKeyboard,
  });
  handleButtonClicks(ctx, socialNetworks);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏"
bot.hears('–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏', async (ctx) => {
  const promoKeyboard = createKeyboard(promoCodes);
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –∏ —Å–∫–∏–¥–æ–∫:', {
    reply_markup: promoKeyboard,
  });
  handleButtonClicks(ctx, promoCodes);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ù–∞–∑–∞–¥"
bot.hears('–ù–∞–∑–∞–¥', async (ctx) => {
  const startKeyboard = new Keyboard()
    .text('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏')
    .row()
    .text('–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏')
    .row()
    .text('–ü—Ä–µ–¥–ª–æ–∂–∫–∞')
    .row();
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
    reply_markup: startKeyboard,
  });
});

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
bot.hears('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å:', {
    reply_markup: socialKeyboard,
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
socialNetworks.forEach(network => {
  bot.hears(network.name, async (ctx) => {
    const message = `–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ ${network.name}: ${network.url}`;
    await ctx.reply(message);
  });
});

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
bot.hears('–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏', async (ctx) => {
  await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', {
    reply_markup: promoKeyboard,
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
promoCodes.forEach(promo => {
  bot.hears(promo.name, async (ctx) => {
    const message = `–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ ${promo.name}: ${promo.url}`;
    await ctx.reply(message);
  });
});

bot.hears('–ü—Ä–µ–¥–ª–æ–∂–∫–∞', async (ctx) => {
  await ctx.reply('–û–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Ä—É –±–æ—Ç–∞.');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–≤—Ç–æ—Ä—É –±–æ—Ç–∞
bot.on('message:text', async (ctx) => {
  const authorId = process.env.ADMIN_ID;
  const message = ctx.message.text;

  // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–≤—Ç–æ—Ä—É –±–æ—Ç–∞
  await ctx.forwardMessage(authorId, { text: message });
});

//–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ
bot.api.setMyCommands([
  {
    command:'start', 
    description: '–°—Ç–∞—Ä—Ç –±–æ—Ç–∞',
  },
]);

//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.catch((err) => {
  const ctx = err.ctx;
  console.error(`Error while handling update ${ctx.update.update_id}:`);
  const e = err.error;

  if (e instanceof GrammyError) {
    console.error("Error in request:", e.description);
  } else if (e instanceof HttpError) {
    console.error("Could not contact Telegram:", e);
  } else {
    console.error("Unknown error:", e);
  }
  });

bot.start();




// bot.hears('–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏', async (ctx) => {
//   // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
//   const promoKeyboard = new InlineKeyboard()
//     .text('–•–æ—Å—Ç–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞', 'hosting')
//     .row()
//     .text('–Ø–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º', 'yandex')

//   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
//   await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', {
//     reply_markup: promoKeyboard,
//   });
// });











// bot.hears('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', async (ctx) => {
//   // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
//   const socialKeyboard = new Keyboard()
//     .text('YouTube', 'YouTube')
//     .row()
//     .text('Telegram', 'Telegram')
//     .row()
//     .text('Vk', 'Vk')
//     .row()
//     .text('–î–ó–ï–ù', '–î–ó–ï–ù')
//     .row()
//     .text('TikTok', 'TikTok')
//     .row()
//     .text('X', 'X')
//     .row()
//     .text('Instagram', 'Instagram')

//   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
//   await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å:', {
//     reply_markup: socialKeyboard,
//   });
// });

// bot.hears('–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ —Å–∫–∏–¥–∫–∏', async (ctx) => {
//   // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
//   const promoKeyboard = new InlineKeyboard()
//     .text('–•–æ—Å—Ç–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞', 'hosting')
//     .row()
//     .text('–Ø–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º', 'yandex')

//   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
//   await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', {
//     reply_markup: promoKeyboard,
//   });
// });

// //–ï–¥–∏–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–≤—É—Ö —Å–æ–±—ã—Ç–∏–π
// bot.on('callback_query', async (ctx) => {
//   const query = ctx.callbackQuery.data;
//   let message = '';

//   switch (query) {
//     case 'hosting':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞: https://timeweb.cloud/?i=108133';
//       break;
//     case 'yandex':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º: https://example.com/yandex';
//       break;
//     case 'YouTube':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube: https://www.youtube.com/@tehno.maniak';
//       break;
//     case 'Telegram':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ Telegram: https://t.me/tehnomaniak07';
//       break;
//     case 'Vk':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: https://vk.com/public212223166';
//       break;
//     case '–î–ó–ï–ù':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –î–∑–µ–Ω: https://dzen.ru/filimonov-blog.ru';
//       break;
//     case 'TikTok':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ TikTok: https://www.tiktok.com/';
//       break;
//     case 'X':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ X: https://example.com/x';
//       break;
//     case 'Instagram':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ Instagram: https://www.instagram.com/';
//       break;
//     default:
//       message = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.';
//   }

//   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π
//   await ctx.reply(message);
// });



// bot.on('callback_query:data', async (ctx) => {
//   const socialNetwork = ctx.callbackQuery.data;

//   // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
//   let socialUrl;
//   switch (socialNetwork) {
//     case 'YouTube':
//       socialUrl = 'https://www.youtube.com/@tehno.maniak';
//       break;
//     case 'Telegram':
//       socialUrl = 'https://t.me/tehnomaniak07';
//       break;
//     case 'Vk':
//       socialUrl = 'https://vk.com/public212223166';
//       break;
//     case '–î–ó–ï–ù':
//       socialUrl = 'https://dzen.ru/filimonov-blog.ru';
//       break;
//     case 'TikTok':
//         socialUrl = 'https://dzen.ru/filimonov-blog.ru';
//       break;
//     case 'X':
//         socialUrl = 'https://dzen.ru/filimonov-blog.ru';
//     break;
//     case 'Instagram':
//       socialUrl = 'https://dzen.ru/filimonov-blog.ru';
//     break;
//     default:
//       socialUrl = '';
//   }

//   // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å
//   if (socialUrl) {
//     await ctx.reply(`–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ ${socialNetwork}: ${socialUrl}`);
//   } else {
//     await ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.');
//   }
// });

// bot.on('callback_query', async (ctx) => {
//   const query = ctx.callbackQuery.data;
//   let message = '';

//   switch (query) {
//     case 'hosting':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥ —Å–µ—Ä–≤–µ—Ä–∞: https://example.com/hosting';
//       break;
//     case 'yandex':
//       message = '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ø—Ä–∞–∫—Ç–∏–∫—É–º: https://example.com/yandex';
//       break;
//     default:
//       message = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.';
//   }

//   await ctx.reply(message);
// });